#-*- coding: utf-8 -*-

# 路径规划使用例

# 先包括库文件
from pathPlanning import pathPlanning

# 声明路径规划器
# 第一个参数为路径长度权重，值越高规划器会倾向于规划路径更短的路径
# 第二个参数为角度权重，值越高规划器会倾向于规划转角角度更小短路径
demo=pathPlanning(1,1)

# 规划路径并返回未插值的目标点坐标
# 方向代码值代表见附带的 方向代码.png
# 第一个参数要输入起始方向代码，方向代码的值见附带的方向代码表.jpg
# 第二个参数输入一个数组，包含必经点数值，数值见640.png
# 第三个参数输入终点数值，数值见640.png
path=demo.findBestPathToCoordinateOnlyTarget(1,[10,11,5],11)

# 此函数规划路径并返回方向代码
# 方向代码值代表见附带的 方向代码.png
# 第一个参数要输入起始方向代码，方向代码的值见附带的方向代码表.jpg
# 第二个参数输入一个数组，包含必经点数值，数值见640.png
# 第三个参数输入终点数值，数值见640.png
path=demo.findBestPathToDirection(1,[10,11,5],11)

# 规划路径并返回插值过后的目标点坐标
# 方向代码值代表见附带的方向代码.png
# 第一个参数代表插值分辨率，单位为米，下面的示例意味着每过0.1米会往路径插入一个点，值越小插值数量越多
# 第二个参数要输入起始方向代码，方向代码的值见附带的方向代码表.jpg
# 第三个参数输入一个数组，包含必经点数值，数值见640.png
# 第四个参数输入终点数值，数值见640.png
path=demo.findBestPathToCoordinate(0.1,1,[10,11,5],11)
